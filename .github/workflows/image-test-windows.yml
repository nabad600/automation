name: Laravel 

on:
  schedule:
  - cron:  '30 6 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-php81-laravel9-AMD64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker version check
      run:  docker --version
    - name: Docker Compose version check
      run:  docker-compose --version
    - name: Build the Docker image nginx, php 8.1 and laravel 9
      run: |
        docker-compose -f "docker-compose.yml" up -d
      env:
        experimental: "true"
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 9
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    # - name: Build the Docker image mariadb
    #   run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    # - name: Build the Docker image Mongodb
    #   run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    # - name: Verify MariaDB running from host, create Database and show Database
    #   run: |
    #     while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
    #         echo "Waiting for database connection..."
    #         sleep 2
    #     done
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    # - name: Enverment file contan check
    #   run: docker exec laravel_laravel_1 cat /var/www/.env
    # - name: Check Laravel to mariadb connection status
    #   run: docker exec laravel_laravel_1 php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 php artisan migrate
    - name: Destroy container and file
      run:  |
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  